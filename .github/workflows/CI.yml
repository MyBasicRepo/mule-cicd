# This is a basic workflow to help you get started with Actions using supti32acc

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ master ]

jobs:
  sonarscan:
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=MyBasicRepo_mule-cicd
      - name: Checkout this repo
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 8
     
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3


      - name: cache m2 repositories
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.m2/repository
          key: ${{runner.os}}-maven-${{env.cache-name}}-${{hashFiles('**/pom.xml')}}
          restore-keys:
            ${{runner.os}}-maven-${{env.cache-name}}
            ${{runner.os}}-maven
            ${{runner.os}}-
            

      # Maven settings.xml
      - name: Create settings.xmlwhelk-io/maven
    
        uses: whelk-io/maven-settings-xml-action@v20
        with: 
          servers: '[{ "id": "anypoint-exchange", "username": "${{secrets.ANYPOINT_USERNAME}}", "password": "${{secrets.ANYPOINT_PASSWORD}}" }]'
          repositories: '[{ "id": "some-repository", "url": "http://some.repository.url" }]'
          run:       
            cat ~/.m2/repository
      - name: Set JDK 1.8
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 8
          
          path: ~/.m2/repository
          settings-path: ${{github.workspace}}
          
      - name: CloudHub Deployment
        run: mvn clean deploy -DskipTests -DmuleDeploy -Dusername=${{secrets.ANYPOINT_USERNAME}} -Dpassword=${{secrets.ANYPOINT_PASSWORD}}
      
                  
